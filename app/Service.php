<?php

namespace App;

class Service extends Base
{
    protected $table = 'services';
    protected $fillable = ['url','link','title','content','dop_content','experience_content','seo_description','seo_keywords','seo_title','sort','seo_content','public','service_id','action'];
    public $timestamps = false;

    public function pictures(){
        return $this->hasMany('App\Pictures','note_id')->where('link','=','service')->orderBy('sort');
    }

    public function gallery(){
        return $this->hasMany('App\Pictures','note_id')->where('link','=','service_gallery')->orderBy('sort');
    }

    public function ico(){
        return $this->hasMany('App\Pictures','note_id')->where('link','=','service_ico')->orderBy('sort');
    }


    public function setLinkAttribute($value){
        $this->attributes['link'] = empty($value)?str_slug($this->title):$value;
        $this->updateUrl();
    }

    public function updateUrl(){
        $parent=$this->parent;
        $this->url = isset($parent->url)?$parent->url.'/'.$this->link:$this->link;
    }

    public function setUrlChilds(){
        foreach($this->childs as $child){
            $child->updateUrl();
            $child->save();
        }
    }

    public function parent(){
        return $this->hasOne('App\Service','id','service_id');
    }

    public function childs(){
        return $this->hasMany('App\Service');
    }

    public static function boot()
    {
        parent::boot();

        static::saved(function($page)
        {
            $page->setUrlChilds();

        });

    }

    public function url(){
        return '/'.$this->url;
    }

    public function workers(){
        return $this->belongsToMany('App\Worker');
    }

    public function actions(){
        return $this->belongsToMany('App\Action')->where('public',1);
    }

    public function diseases(){
        return $this->belongsToMany('App\Disease');
    }

    public function technologies(){
        return $this->belongsToMany('App\Technology');
    }

    public function content_blocks(){
        return $this->hasMany('App\ContentBlock')->orderBy('sort');
    }



    public function prices(){
        return $this->hasMany('App\Price')->orderBy('sort');
    }

    public function reviews()
    {
        return $this->morphMany('App\Review', 'owner','type','parent');
    }

    /**
     * @return bool|null
     * @throws \Exception
     */
    public function delete()
    {
       $this->pictures->delete();
       $this->gallery->delete();
       $this->ico->delete();
       return parent::delete(); // TODO: Change the autogenerated stub
    }
}
