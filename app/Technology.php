<?php

namespace App;

class Technology extends Base
{
    protected $table = 'technologies';
    protected $fillable = ['url','link','title','content','small_content','seo_description','seo_keywords','seo_title','sort','seo_content','public','video_link'];
    public $timestamps = false;

    public function pictures(){
        return $this->hasMany('App\Pictures','note_id')->where('link','=','techno')->orderBy('sort');
    }

    public function pictures_top(){
        return $this->hasMany('App\Pictures','note_id')->where('link','=','techno_top')->orderBy('sort');
    }

    public function setLinkAttribute($value){
        $this->attributes['link'] = empty($value)?str_slug($this->title):$value;
        $this->updateUrl();
    }

    public function updateUrl(){
        $parent=$this->parent;
        $this->url = isset($parent->url)?$parent->url.'/'.$this->link:$this->link;
    }

    public function setUrlChilds(){
        foreach($this->childs as $child){
            $child->updateUrl();
            $child->save();
        }
    }

    public function parent(){
        return $this->hasOne('App\Technology','id','technologie_id');
    }

    public function childs(){
        return $this->hasMany('App\Technology');
    }

    public static function boot()
    {
        parent::boot();

        static::saved(function($page)
        {
            $page->setUrlChilds();

        });

    }

    public function bread(){
        $bread = [['link'=>''.$this->url(), 'title'=>$this->title]];
        if($this->page_id!=0){
           $bread = array_merge($this->parent->bread(),$bread);
        }
        return $bread;
    }

    public function url(){
        return '/'.$this->url;
    }



    /**
     * @return bool|null
     * @throws \Exception
     */
    public function delete()
    {
       $this->pictures->delete();
       $this->pictures_top->delete();
       return parent::delete(); // TODO: Change the autogenerated stub
    }
}
